#!/bin/zsh
source $DIR_DOTFILES/backpack/functions.sh

echo_title_install "brew cask"
brewtap phinze/cask
brewtap caskroom/versions

brew install brew-cask 2>&1 | grep -v "already installed"

echo_title_install "native OS X Apps"

typeset -A APPS
APPS=(
	# enhance OS X with some small utilities
	"XtraFinder" "xtrafinder"
	"AppCleaner" "appcleaner"
	"Day-O" "day-o"

	#	"noip_duc #todo"
	"Flux" "f-lux"
	"Alfred 2" "alfred"
	"Shortcat" "shortcat"

	# browsers
	"Google Chrome" "google-chrome"
	"Firefox" "firefox"

	# sync & download
	"Dropbox" "dropbox"
	"BitTorrent Sync" "bittorrent-sync"
	"Google Drive" "google-drive"
	"Transmission" "transmission"

	# multimedia
	"VLC" "vlc"
	"MPlayerX" "mplayerx"
	"Rdio" "rdio"
	"Subtitles" "subtitles"
	"All2MP3" "all2mp3"

	"/Applications/Adobe/Flash Player" "flash"
	"LibreOffice" "libreoffice"

	# messengers
	"Skype" "skype"
	"/Library/Internet Plug-Ins/googletalkbrowserplugin.plugin" "google-hangouts"

	"Sublime Text" "sublime-text3"
)

# LOCAL APPS
# todo add just for me ($USER = MoOx ?)
typeset -A APPS_LOCAL
APPS_LOCAL=(
	"KeePassX" "keepassx2"

	"Last.fm" "lastfm"
	"FirefoxAurora" "firefox-aurora"
	"FirefoxNightly" "firefox-nightly"
	"Opera" "opera"

	# required by I don't know why
	"Utilities/XQuartz" "xquartz"

	# for vpn
	"Tunnelblick" "tunnelblick"

	# lazydev
	"GitHub" "github"
	"Cyberduck" "cyberduck"

	# just in case
	"ImageAlpha" "imagealpha"
	"ImageOptim" "imageoptim"

	# more utilities
	"Mou" "mou"
	"Cloud" "cloudapp"

	# more messengers
	"LimeChat" "limechat"
	"HipChat" "hipchat"

	"VirtualBox" "virtualbox"
	"Versions" "versions"

	"Steam" "steam"

	"Trim Enabler" "trim-enabler"
	"Synergy" "synergy"
	"SuperDuper!" "superduper"

	"SourceTree" "sourcetree"
	"iTerm" "iterm2"
	"Slate" "slate"

	"Jubler" "jubler"

	"Colors" "colors"
	"GIMP" "gimp"

	"Integrity" "integrity"
	#"Site Sucker" "sitesucker" broken package
	"Slowy" "slowy"

	"NameChanger" "namechanger"
	"coconutBattery" "coconutbattery"
	# todo coconut-battery

	"GrandPerspective" "grandperspective"

	"/Library/PreferencePanes/Logitech Control Center.prefPane" "logitech-control-center"
	"Utilities/Logitech Unifying Software" "logitech-unifying"

	"Bodega" "bodega"

	# QuickLook plugins from https://github.com/sindresorhus/quick-look-plugins
	"/opt/homebrew-cask/Caskroom/qlcolorcode" "qlcolorcode"
	"/opt/homebrew-cask/Caskroom/qlstephen" "qlstephen"
	"/opt/homebrew-cask/Caskroom/qlmarkdown" "qlmarkdown"
	"/opt/homebrew-cask/Caskroom/quicklook-json" "quicklook-json"
	"/opt/homebrew-cask/Caskroom/qlprettypatch" "qlprettypatch"
	"/opt/homebrew-cask/Caskroom/quicklook-csv" "quicklook-csv"
	"/opt/homebrew-cask/Caskroom/betterzipql" "betterzipql"
	"/opt/homebrew-cask/Caskroom/webp-quicklook" "webp-quicklook"
	"/opt/homebrew-cask/Caskroom/suspicious-package" "suspicious-package"

	#toadd
	#openemu
	#ntfs-free
	#gfxcardstatus
	#bootchamp
)

# todo
#SetAPPSync

# output is too ugly for now
# https://github.com/phinze/homebrew-cask/issues/1323
#cask-install-async $APPS[@]

for app in ${(k)APPS}; do
	# install if not present already (skip "already installed" error)
	if ! $(ls "$app" &> /dev/null) && ! $(ls "/Applications/$app.app" &> /dev/null) && ! $(ls "$HOME/Applications/$app.app" &> /dev/null)
	then
		brew cask install ${APPS[$app]} --appdir="/Applications"
	fi
done

for app in ${(k)APPS_LOCAL}; do
	if ! $(ls "$app" &> /dev/null) && ! $(ls "/Applications/$app.app" &> /dev/null) && ! $(ls "$HOME/Applications/$app.app" &> /dev/null)
	then
		brew cask install ${APPS_LOCAL[$app]} --appdir="$HOME/Applications"
	fi
done

# reset QuickLook plugins
qlmanage -r &> /dev/null

# todo themes
#https://github.com/kud/my/blob/master/scripts/rocknroll#L135

SUBLIME_TEXT_PREF_DIR="$HOME/Library/Application Support/Sublime Text 3"
if ! type "subl" > /dev/null; then
	echo_title "Configuring Sublime Text bin"
	ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl

	curl "https://sublime.wbond.net/Package%20Control.sublime-package" --out "$SUBLIME_TEXT_PREF_DIR/Installed Packages/Package Control.sublime-package"
	link_files "$DIR_DOTFILES/backpack/sublime-text/Package Control.sublime-settings" "$SUBLIME_TEXT_PREF_DIR/Packages/User/Package Control.sublime-settings"
	link_files "$DIR_DOTFILES/backpack/sublime-text/Preferences.sublime-settings" "$SUBLIME_TEXT_PREF_DIR/Packages/User/Preferences.sublime-settings"
fi


###
# Transmission.app
###

# Use `~/Documents/Torrents` to store incomplete downloads
defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Downloads/Torrents"

# Donâ€™t prompt for confirmation before downloading
defaults write org.m0k.transmission DownloadAsk -bool false

# Trash original torrent files
defaults write org.m0k.transmission DeleteOriginalTorrent -bool true

# Hide the donate message
defaults write org.m0k.transmission WarningDonate -bool false
# Hide the legal disclaimer
defaults write org.m0k.transmission WarningLegal -bool false

# todo add to Alfred.app search scope
# /Applications/Xcode.app/Contents/Applications/
# /System/Library/CoreServices/
# /System/Library/CoreServices/Applications/
# /opt/homebrew-cask/Caskroom/

LIMECHAT_THEME="$HOME/Library/Application Support/LimeChat/Themes/LimeChat-theme-Monokai-Soda"
if ! ls "$LIMECHAT_THEME.css" > /dev/null
then
	echo_title "Installing LimeChat theme"
	git clone https://github.com/MoOx/LimeChat-theme-Monokai-Soda.git $LIMECHAT_THEME
	ln -s $LIMECHAT_THEME/LimeChat-theme-Monokai-Soda.* $LIMECHAT_THEME
fi

###
# Prey project
###
if ! ls "/usr/share/prey/prey.sh" > /dev/null
then
	echo_title "Installing Prey project tracker, we will need you Prey API_KEY"
	echo_info "Please login into your Prey account to get your API key & paste it (or just type enter to bypass the install):"
	open "https://panel.preyproject.com/profile"
	read API_KEY
	if [ "$API_KEY" != "" ]; then
		API_KEY="$API_KEY" brew cask install prey
	fi
fi
